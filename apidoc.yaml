openapi: 3.0.3
info:
  title: E-Commerce Platform API
  version: 1.0.0
  description: RESTful API for an e-commerce platform.

servers:
  - url: https://api.yourdomain.com/v1
    description: Production server

paths:
  /categories:
    get:
      summary: Get all product categories
      tags:
        - Categories
      responses:
        '200':
          description: A list of categories
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

  /categories/{categoryId}/products:
    get:
      summary: Get products by category
      tags:
        - Products
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: List of products in the category
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /products/search:
    get:
      summary: Search products with filters
      tags:
        - Products
      parameters:
        - name: q
          in: query
          required: false
          description: Full-text search term
          schema:
            type: string
        - name: min_price
          in: query
          schema:
            type: number
            format: float
        - name: max_price
          in: query
          schema:
            type: number
            format: float
        - name: category_id
          in: query
          schema:
            type: integer
        - name: store_id
          in: query
          schema:
            type: integer
      responses:
        '200':
          description: Search results
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'

  /orders:
    post:
      summary: Create a new order and process payment
      tags:
        - Orders
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrderRequest'
      responses:
        '201':
          description: Order created and payment processed
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrderResponse'

  /orders/{orderId}/send-confirmation:
    post:
      summary: Send order confirmation email asynchronously
      tags:
        - Orders
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: integer
      responses:
        '202':
          description: Email sending initiated

components:
  schemas:
    Category:
      type: object
      properties:
        category_id:
          type: integer
        name:
          type: string
        description:
          type: string
        discount_rate:
          type: number
          format: float

    Product:
      type: object
      properties:
        product_id:
          type: integer
        name:
          type: string
        description:
          type: string
        price:
          type: number
          format: float
        stock_quantity:
          type: integer
        category_id:
          type: integer
        store_id:
          type: integer

    OrderRequest:
      type: object
      required:
        - user_id
        - address_id
        - products
      properties:
        user_id:
          type: integer
        address_id:
          type: integer
        voucher_ids:
          type: array
          items:
            type: integer
        products:
          type: array
          items:
            type: object
            properties:
              product_id:
                type: integer
              quantity:
                type: integer

    OrderResponse:
      type: object
      properties:
        order_id:
          type: integer
        status:
          type: string
        total_price:
          type: number
          format: float
        message:
          type: string
